%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2014 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<!doctype html>
<html>
<head>
    <!-- Meta -->
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" href="<%RT->Config->Get('WebPath')%>/static/css/bootstrap.min.css" />
    <script type="text/javascript" src="<%RT->Config->Get('WebPath')%>/static/js/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="<%RT->Config->Get('WebPath')%>/static/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="<%RT->Config->Get('WebPath')%>/static/css/cards.css" />
</head>
<body>
    <div class="container-fluid">
        <div class="row card-list">
% while ( my $Ticket = $Tickets->Next()) {
                        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            <div class="card">
                                <div class="title">
                                    <h4><% $Ticket->Subject || loc('No Subject') %></h4>
                                </div>
                                <div class="no-padding">
                                    <ul class="list-group">
                                        <li class="list-group-item">
                                            <div>
                                                <ul class="card-props">
                                                    <li>
                                                        <span><&|/l&>Id</&>:</span>
                                                        <% $Ticket->Id %>
                                                    </li>
                                                    <li>
                                                        <span><&|/l&>Status</&>:</span>
                                                        <% loc($Ticket->Status) %>
                                                    </li>
% if ($Ticket->TimeEstimated) {
                                                    <li>
                                                        <span><&|/l&>Estimated</&>:</span>
                                                        <& /Ticket/Elements/ShowTime, minutes => $Ticket->TimeEstimated &>
                                                    </li>
% }

% if ($Ticket->TimeWorked) {
                                                    <li>
                                                        <span><&|/l&>Worked</&>:</span>
                                                        <& /Ticket/Elements/ShowTime, minutes => $Ticket->TimeWorked &>
                                                    </li>
% }

% if ($Ticket->TimeLeft) {
                                                    <li>
                                                        <span><&|/l&>Left</&>:</span>
                                                        <& /Ticket/Elements/ShowTime, minutes => $Ticket->TimeLeft &>
                                                    </li>
% }
                                                    <li>
                                                        <span><&|/l&>Priority</&>:</span>
                                                        <& /Ticket/Elements/ShowPriority, Ticket => $Ticket &>
                                                    </li>

% if ($Ticket->CurrentUserHasRight('SeeQueue')) {
                                                    <li>
                                                        <span><&|/l&>Queue</&>:</span>
                                                        <& /Ticket/Elements/ShowQueue, Ticket => $Ticket, QueueObj => $Ticket->QueueObj &>
                                                    </li>
% }

                                                      <& /Search/Cards/Elements/ShowCustomFields, Object => $Ticket, Grouping => 'Basics' &>
                                                      <& /Search/Cards/Elements/ShowCustomFields, Object => $Ticket, Grouping => '' &>
                                                </ul>
                                            </div>
                                        </li>
                                        <li class="list-group-item">
                                            <div class="row action">
                                                <a class="btn btn-primary pull-right" href="<% RT->Config->Get('WebURL') %>Ticket/Display.html?id=<% $Ticket->id %>">
                                                    View
                                                </a>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
% }
 
        </div>
    </div>
</body>
</html>

% $session{'CurrentUser'} = $old_current_user if $old_current_user;
% $m->abort();

<%INIT>

use Encode ();

my $old_current_user;

if ( $m->request_comp->path =~ RT->Config->Get('WebNoAuthRegex') ) {
    my $path = $m->dhandler_arg;

    my $notfound = sub {
        my $mesg = shift;
        $r->headers_out->{'Status'} = '404 Not Found';
        $RT::Logger->info("Error encountered in cards generation: $mesg");
        $m->clear_and_abort;
    };

    $notfound->("Invalid path: $path") unless $path =~ m!^([^/]+)/([^/]+)/?!;

    my ( $name, $auth ) = ( $1, $2 );

    # Unescape parts
    $name =~ s/\%([0-9a-z]{2})/chr(hex($1))/gei;

    # convert to perl strings
    $name = Encode::decode_utf8($name);

    my $user = RT::User->new(RT->SystemUser);
    $user->Load($name);
    $notfound->("Invalid user: $user") unless $user->id;

    $notfound->("Invalid authstring")
      unless $user->ValidateAuthString( $auth,
              $ARGS{Query} . $ARGS{Order} . $ARGS{OrderBy} );

    $old_current_user = $session{'CurrentUser'};
    my $cu               = RT::CurrentUser->new;
    $cu->Load($user);
    $session{'CurrentUser'} = $cu;
}

my $Tickets = RT::Tickets->new($session{'CurrentUser'});
$Tickets->FromSQL($ARGS{'Query'});
if ($OrderBy =~ /\|/) {
    # Multiple Sorts
    my @OrderBy = split /\|/,$OrderBy;
    my @Order = split /\|/,$Order;
    $Tickets->OrderByCols(
        map { { FIELD => $OrderBy[$_], ORDER => $Order[$_] } } ( 0
        .. $#OrderBy ) );;
} else {
    $Tickets->OrderBy(FIELD => $OrderBy, ORDER => $Order);
}

</%INIT>
<%ARGS>
$OrderBy => 'Created'
$Order => 'ASC'
</%ARGS>
